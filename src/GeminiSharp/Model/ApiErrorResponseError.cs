/*
 * Google Gemini API
 *
 * Comprehensive API for interacting with Google's Gemini models supporting text, chat, image generation, file uploads, grounding, code execution, model tuning, and more.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = GeminiSharp.Client.FileParameter;
using OpenAPIDateConverter = GeminiSharp.Client.OpenAPIDateConverter;

namespace GeminiSharp.Model
{
    /// <summary>
    /// ApiErrorResponseError
    /// </summary>
    [DataContract(Name = "ApiErrorResponse_error")]
    public partial class ApiErrorResponseError : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiErrorResponseError" /> class.
        /// </summary>
        /// <param name="code">The HTTP status code.</param>
        /// <param name="message">A human-readable error message.</param>
        /// <param name="status">The status of the error.</param>
        /// <param name="details">Additional error details.</param>
        public ApiErrorResponseError(int code = default, string message = default, string status = default, Collection<Object> details = default)
        {
            this.Code = code;
            this.Message = message;
            this.Status = status;
            this.Details = details;
        }

        /// <summary>
        /// The HTTP status code
        /// </summary>
        /// <value>The HTTP status code</value>
        [DataMember(Name = "code", EmitDefaultValue = false)]
        public int Code { get; set; }

        /// <summary>
        /// A human-readable error message
        /// </summary>
        /// <value>A human-readable error message</value>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// The status of the error
        /// </summary>
        /// <value>The status of the error</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Additional error details
        /// </summary>
        /// <value>Additional error details</value>
        [DataMember(Name = "details", EmitDefaultValue = false)]
        public Collection<Object> Details { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ApiErrorResponseError {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
